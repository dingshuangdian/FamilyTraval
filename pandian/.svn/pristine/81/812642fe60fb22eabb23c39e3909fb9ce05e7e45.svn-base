package com.kingtangdata.inventoryassis.act;

import android.content.Intent;
import android.os.Bundle;
import android.text.InputType;
import android.text.TextUtils;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.WindowManager;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.EditText;

import com.kingtangdata.inventoryassis.R;
import com.kingtangdata.inventoryassis.activity.BaseActivity;
import com.kingtangdata.inventoryassis.data.User;
import com.kingtangdata.inventoryassis.db.UserManager;
import com.kingtangdata.inventoryassis.tabs.TabsOfBottom;
import com.kingtangdata.inventoryassis.util.Password;
import com.kingtangdata.inventoryassis.util.StorageUtils;

public class ActivityLogin extends BaseActivity implements OnCheckedChangeListener{
	private EditText etAccount ;
	private EditText etPassword ;
	
	//选中显示密码
	private CheckBox cbPassword;
	
	
	public void onCreate(Bundle bundle){
		super.onCreate(bundle);
		super.setContentView(R.layout.activity_login);
		super.setTopLabel("用户登录");
		
		etAccount = (EditText)findViewById(R.id.text_user_id);
		etPassword = (EditText)findViewById(R.id.text_password);
		
		cbPassword = (CheckBox)findViewById(R.id.checkbox);
		cbPassword.setOnCheckedChangeListener(this);
		
		//获取设备屏幕宽高以及密度
		DisplayMetrics metrics = new DisplayMetrics();
		WindowManager wm = getWindowManager();
		wm.getDefaultDisplay().getMetrics(metrics);
		int dpi = metrics.densityDpi;
		//将屏幕密度保存到文件中  方便项目其他地方使用
		//将dpi保存到文件中  
		StorageUtils.setProperty(StorageUtils.DPI, dpi, this);		
	}
	
	/**
	 * 注册
	 * @param view
	 */
	public void  doRegister(View view){
		startActivity(new Intent(this, ActivityRegister.class));
	}
	
	/*
	 * 单击登陆事件调用
	 */
	public void doLogin(View view){
		String account = etAccount.getText().toString();
		String password = etPassword.getText().toString();
		
		//用户名不能为空
		if(TextUtils.isEmpty(account)){
    		makeText("请输入用户名！");
    		return;
    	}
		
		//密码不能为空
		if(TextUtils.isEmpty(password)){
    		makeText("密码不能为空！");
    		return;
    	}
		
		//开始检查用户名和密码
		User user = login(account, password);
		if (user != null){
			//登录成功保存用户的deptid到文件中
			StorageUtils.setProperty(StorageUtils.USER_ID, user.getUser_id(),this);
			
	        Intent intent = new Intent();
	        intent.setClass(this, TabsOfBottom.class);
	        startActivity(intent);
	        finish();
    	}else{
    		makeText("用户名或密码错误");
    	}
	}
	
	private User login(String userCode, String password){
		//加密
		String md5 = Password.md5(password);
		//检查用户是否存在于用户表中
		return UserManager.getInstance(this).checkUser(userCode, md5);
	}
	
	
	protected void onResume(){
	    super.onResume();
	    //给默认值，调试用
	    String account = StorageUtils.getString(StorageUtils.USER_ACCOUNT,this,"");
	    String password = StorageUtils.getString(StorageUtils.USER_PASSWORD,this,"");
	    
	    etAccount.setText(account);
	    etPassword.setText(password);
	}
	

	@Override
	public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
		// TODO Auto-generated method stub
		if (isChecked) {
			etPassword.setInputType(InputType.TYPE_TEXT_VARIATION_VISIBLE_PASSWORD);
		} else {
			etPassword.setInputType(InputType.TYPE_CLASS_TEXT| InputType.TYPE_TEXT_VARIATION_PASSWORD);
		}
	}
}