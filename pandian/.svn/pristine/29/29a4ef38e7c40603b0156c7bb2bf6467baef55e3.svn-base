package com.kingtangdata.inventoryassis.act;

import java.util.Iterator;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.EditText;

import com.kingtangdata.inventoryassis.R;
import com.kingtangdata.inventoryassis.activity.PagerActivity;
import com.kingtangdata.inventoryassis.adapter.PopForStringAdapter;
import com.kingtangdata.inventoryassis.data.Plan;
import com.kingtangdata.inventoryassis.db.PlanManager;
import com.kingtangdata.inventoryassis.hardware.nfc.NfcDispatcher;
import com.kingtangdata.inventoryassis.util.LogUtils;
import com.kingtangdata.inventoryassis.view.SliderPopupChoicer;



/**
 * 盘点任务界面
 * @author leo
 *
 */
public class ActivityCkeckTask extends PagerActivity{
	private Button btnBarcode ;
	
	private boolean flag = false; //控制开始或者暂停的标识
	private String rfid = "";
	
	//标签编码的下拉选项框
	private SliderPopupChoicer choicer;
	
	//盘查按钮
	private Button btnCheck;
	
	//查找字段输入内容
	private EditText search_input;
	
	private Plan plan = null;
	
	
	public static final String PD_CHECK = "pandian";  //盘点处理
	public static final String PK_CHECK = "pankui";   //盘亏处理
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		super.setContentView(R.layout.activity_checktask);
		super.setStatusBarVisibility(View.VISIBLE);
		super.setTopLabel(getString(R.string.title_activity_inventory));
		super.setLeftButtonText("返回");
		super.setRightButtonImage(R.drawable.rfid_connect2);
		super.initCompenents();
		
		//在盘点任务界面需要显示盘查按钮
		btnCheck = (Button)findViewById(R.id.btn_check);
		btnCheck.setVisibility(View.VISIBLE);
		
		//查找条件
		search_input = (EditText)findViewById(R.id.search_input);
			
		
		String[] mData = getResources().getStringArray(R.array.marks); 
		PopForStringAdapter adapter = new PopForStringAdapter(this, mData); 
		choicer = (SliderPopupChoicer)findViewById(R.id.checker_choice);
		choicer.setAdapter(adapter);
		//启动NFC适配器
		NfcDispatcher.initial(this, NfcDispatcher.TECH_DISCOVERED_FILTERS);
		flag=true;
		
		
		StringBuffer querySQL = new StringBuffer("select * from plans where check_result='kb'");
		List<Plan> plans = PlanManager.getInstance(this).getPlans(querySQL.toString(),null);
		setData(plans);
	}
	
	@Override
	public void doClickLeftBtn() {
		// TODO Auto-generated method stub
		onBackPressed();
	}
	
	@Override
	public void onBackPressed() {
		// TODO Auto-generated method stub
		finish();
	}
	
	@Override
	public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
		// TODO Auto-generated method stub
		super.onItemClick(adapterView, view, i, l);
		plan = (Plan)adapterView.getItemAtPosition(i);
		
		Intent intent = new Intent(this, ActivityCheckTaskForm.class);
		intent.putExtra("plan", plan);
		intent.putExtra("type", PK_CHECK);
		startActivityForResult(intent, 101);
	}
	
	public void onResume(){ 
		super.onResume();
		NfcDispatcher.enableDispatch(this,NfcDispatcher.TECH_DISCOVERED_FILTERS,NfcDispatcher.ALL_TECH_LISTS);
	}
	
	@Override
	public void onPause() {
		super.onPause();
		NfcDispatcher.disableDispatch(this);
	}	
	
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		// TODO Auto-generated method stub
		super.onActivityResult(requestCode, resultCode, data);
		
		LogUtils.logd(getClass(), "执行     onActivityResult");
		
		//盘点的请求吗100
		if(resultCode == RESULT_OK && requestCode == 100){
			Plan p =(Plan)data.getSerializableExtra("plan");
			
			plan.setIs_normal(p.getIs_normal());
			plan.setMemo(p.getMemo());
			plan.setCheck_result(p.getCheck_result());
			
			adapter.notifyDataSetChanged();
		}
		
		//盘亏的请求吗101
		if(resultCode == RESULT_OK && requestCode == 101 ){
			Plan p =(Plan)data.getSerializableExtra("plan");
			List<Plan> list = adapter.getList();
			
			list.remove(p);
			
			adapter.notifyDataSetChanged();
		}
	}
	
	/**
	 * 查询操作
	 * @param view
	 */
	public void doSearch(View view){
		//隐藏软键盘
		hideSoftKeyboard(view);
		
		StringBuffer querySQL = new StringBuffer("select * from  plans");
		
		//输入查找条件
		String where_value = search_input.getText().toString();
		
		String[] params = null;
		
		//查找array.xml查询字段信息
		String[] arrayStr = getResources().getStringArray(R.array.ids); 		
		
		//下拉选择对应的字段
		String where_col = arrayStr[choicer.getSelectIndex()];		
				
		if(!where_value.equals("")){
			querySQL.append(" where "+where_col+" like '%'||?||'%' ");
			params =new String[]{where_value};
		}
		
		List<Plan>  plans = PlanManager.getInstance(this).getPlans(querySQL.toString(),params);
		setData(plans);
	}
	
	/**
	 * 盘查操作
	 * @param view
	 */
	public void doCheck(View view){
		
		//隐藏软键盘
		hideSoftKeyboard(view);
		
		StringBuffer querySQL = new StringBuffer("select * from  plans");
		
		//输入查找条件
		String where_value = search_input.getText().toString();
		
		String[] params = null;
		
		//查找array.xml查询字段信息
		String[] arrayStr = getResources().getStringArray(R.array.ids); 		
		
		//下拉选择对应的字段
		String where_col = arrayStr[choicer.getSelectIndex()];		
				
		if(!where_value.equals("")){
			querySQL.append(" where "+where_col+" like '%'||?||'%' ");
			params =new String[]{where_value};
		}
		
		List<Plan>  plans = PlanManager.getInstance(this).getPlans(querySQL.toString(),params);
		//只查出一条记录
		if(plans!=null && !plans.isEmpty()){
			Intent intent = new Intent(this, ActivityCheckTaskForm.class);
			intent.putExtra("plan", plans.get(0));
			intent.putExtra("type", PD_CHECK);
			startActivityForResult(intent,100);
		}
	}
}
