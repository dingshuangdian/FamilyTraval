package com.kingtangdata.inventoryassis.hardware.nfc;

import com.kingtangdata.inventoryassis.util.MessageUtil;

import android.app.Activity;
import android.app.PendingIntent;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.IntentFilter.MalformedMimeTypeException;
import android.nfc.NfcAdapter;
import android.nfc.tech.MifareClassic;
import android.nfc.tech.NfcA;
import android.nfc.tech.NfcB;
import android.nfc.tech.NfcV;

public class NfcDispatcher {
	private static NfcAdapter mAdapter; //NFC适配器
	private static PendingIntent mPendingIntent;
	
	public static IntentFilter[] TAG_DISCOVERED_FILTERS = new IntentFilter[] { 
		new IntentFilter(NfcAdapter.ACTION_TAG_DISCOVERED) };
	
	public static IntentFilter[] TECH_DISCOVERED_FILTERS = new IntentFilter[] { 
		new IntentFilter(NfcAdapter.ACTION_NDEF_DISCOVERED) 
	};
	
	public static IntentFilter[] NDEF_DISCOVERED_FILTERS = new IntentFilter[] { 
		new IntentFilter(NfcAdapter.ACTION_NDEF_DISCOVERED) 
	};
	
	public static String[][] ALL_TECH_LISTS = new String[][] {
		new String[] { MifareClassic.class.getName() },
		new String[] { NfcA.class.getName() },
		new String[] { NfcB.class.getName() },
		new String[] { NfcV.class.getName() } 
	};
	
	public static String[][] NFCA_TECH_LIST = new String[][] { 
		new String[] { NfcA.class.getName() } 
	};
	
	public static String[][] NFCB_TECH_LIST = new String[][] { 
		new String[] { NfcB.class.getName() } 
	};
	
	public static String[][] NFCV_TECH_LIST = new String[][] { 
		new String[] { NfcV.class.getName() } 
	};
	
	public static String[][] MIFARE_TECH_LIST = new String[][] { 
		new String[] { MifareClassic.class.getName() } 
	};
	
	public static NfcAdapter  getNfcAdapter(){
		return mAdapter;
	}
	
	//初始化NFC适配器
	public static void initial(Activity mActivity, IntentFilter[] filters) {
		mAdapter = NfcAdapter.getDefaultAdapter(mActivity);
		
		try {
			for (int i = 0; i < filters.length; i++)
				filters[i].addDataType("*/*");
		} catch (MalformedMimeTypeException e) {
			throw new RuntimeException("fail", e);
		}
	}
	
	public static void enableDispatch(Activity mActivity,Intent intent,IntentFilter[] filters, String[][] techLists){
		mPendingIntent = PendingIntent.getActivity(mActivity, 0,intent ,PendingIntent.FLAG_CANCEL_CURRENT);
		mAdapter.enableForegroundDispatch(mActivity, mPendingIntent, filters,techLists);
	}
	
	public static void disableDispatch(Activity mActivity) {
		
		mAdapter.disableForegroundDispatch(mActivity);
		
	}
}
