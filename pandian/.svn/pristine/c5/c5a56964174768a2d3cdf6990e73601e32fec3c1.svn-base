package com.kingtangdata.inventoryassis.act;

import java.util.ArrayList;
import java.util.List;

import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.Toast;

import com.kingtangdata.inventoryassis.R;
import com.kingtangdata.inventoryassis.activity.PagerActivity;
import com.kingtangdata.inventoryassis.adapter.PagerListAdapter;
import com.kingtangdata.inventoryassis.adapter.PopForStringAdapter;
import com.kingtangdata.inventoryassis.data.Plan;
import com.kingtangdata.inventoryassis.db.PlanManager;
import com.kingtangdata.inventoryassis.util.LogUtils;
import com.kingtangdata.inventoryassis.view.SliderPopupChoicer;

/**
 * 盘点查询界面
 * @author Administrator
 *
 */
public class ActivityDataSearch extends PagerActivity{
	private RadioButton radioSurplus;
	private RadioButton radioShartage;
	private RadioButton radioNot;
	private RadioButton radioChecked;
	private RadioButton radioAll;
	
	//标签编码的下拉选项框
	private SliderPopupChoicer choicer;
	//查找字段输入内容
	private EditText search_input;
		
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		super.setContentView(R.layout.activity_data_search);
		//super.setTopLabel("盘点查询");
		super.setStatusBarVisibility(View.VISIBLE);
		super.setTopLabel(getString(R.string.title_activity_search));
		
		//查找类型：0盘盈，1盘亏，2未盘，3已盘(正常和盘亏),4全部
		radioSurplus = (RadioButton)findViewById(R.id.radio_surplus);
		radioShartage = (RadioButton)findViewById(R.id.radio_shartage);
		radioNot = (RadioButton)findViewById(R.id.radio_not);
		radioChecked = (RadioButton)findViewById(R.id.radio_checked);
		radioAll = (RadioButton)findViewById(R.id.radio_all);
		
		//查找条件
		search_input = (EditText)findViewById(R.id.search_input);
		
		String[] mData = getResources().getStringArray(R.array.marks); 
		PopForStringAdapter adapter = new PopForStringAdapter(this, mData); 
		choicer = (SliderPopupChoicer)findViewById(R.id.checker_choice);
		choicer.setAdapter(adapter);

	}
	
	@Override
	public void onBackPressed() {
		// TODO Auto-generated method stub
		Builder builder = new AlertDialog.Builder(this);
		builder.setTitle("温馨提示");
		builder.setMessage("确认要退出应用？");
		builder.setNegativeButton("取消", null);
		builder.setNeutralButton("确定", new DialogInterface.OnClickListener() {
			@Override
			public void onClick(DialogInterface dialog, int which) {
				// TODO Auto-generated method stub
				finish();
			}
		});
		builder.create().show();
	}
	
	
	@Override
	protected void buildAdapter() {
		// TODO Auto-generated method stub
		StringBuffer querySQL = new StringBuffer("select * from plans ");
		
		List<Plan> plans = PlanManager.getInstance(this).getPlans(querySQL.toString(),null);
		
		LogUtils.logd(getClass(), "size = " + plans.size());
		
		adapter1 = new PagerListAdapter(this, plans, 1);
		adapter2 = new PagerListAdapter(this, plans, 2);
		adapter3 = new PagerListAdapter(this, plans, 3);
		adapter4 = new PagerListAdapter(this, plans, 4);
	}

	@Override
	protected List<String> getTitles() {
		List<String> titles = new ArrayList<String>(); 
		titles.add("设备编号");
		titles.add("资产编号");
		titles.add("设备名称");
		titles.add("使用部门");
		titles.add("条形码");
		titles.add("设备类别");
		titles.add("设备型号");
		titles.add("设备规格");
		titles.add("出厂年月");
		titles.add("安装地点");
		titles.add("盘点结果");
		titles.add("出厂编号");
		titles.add("生产厂家");		
		titles.add("地理区域");
		titles.add("是否相符");
		titles.add("备注");
		
		return titles;
	}
	
	/*
	 * 根据不同类型查找对应的数据
	 */
	public void doSearch(View view){		
		
		StringBuffer querySQL = new StringBuffer("select * from  plans");
		String[] params = null;
		//输入查找条件
		String where_value = search_input.getText().toString();
		if(radioSurplus.isChecked()){
			//盘盈
			querySQL.append(" where check_result=?");
			if(!where_value.equals("")){
				params=new String[]{"py",where_value};
			}else{
				params = new String[]{"py"};
			}
		}else if(radioShartage.isChecked()){
			//盘亏
			querySQL.append(" where check_result=?");
			if(!where_value.equals("")){
				params=new String[]{"py",where_value};
			}else{
				params = new String[]{"pk"};
			}
		}else if(radioNot.isChecked()){
			//未盘
			querySQL.append(" where check_result=?");
			if(!where_value.equals("")){
				params=new String[]{"py",where_value};
			}else{
				params = new String[]{"kb"};
			}
		}else if(radioChecked.isChecked()){
			//已盘
			querySQL.append(" where check_result in(?,?)");
			if(!where_value.equals("")){
				params=new String[]{"py",where_value};
			}else{
				params = new String[]{"zc","pk"};
			}
		}else{
			//全部
			if(!where_value.equals("")){
				querySQL.append(" where 1=1 ");
				params=new String[]{where_value};
			}
		}
		
		//查找array.xml查询字段信息
		String[] arrayStr = getResources().getStringArray(R.array.ids); 		
		
		//下拉选择对应的字段
		String where_col = arrayStr[choicer.getSelectIndex()];		
				
		if(!where_value.equals("")){
			querySQL.append("and "+where_col+" like '%'||?||'%' ");
		}
		
		List<Plan>  plans = PlanManager.getInstance(this).getPlans(querySQL.toString(),params);
		adapter1.setData(plans);
		adapter2.setData(plans);
		adapter3.setData(plans);
		adapter4.setData(plans);
		
		adapter1.notifyDataSetChanged();
		adapter2.notifyDataSetChanged();
		adapter3.notifyDataSetChanged();
		adapter4.notifyDataSetChanged();
	}
	
	
	@Override
	/**
	 * 如果子类需要实现list选项点击事件  则必须override该方法
	 * 选择某一项显示对应的表单信息
	 */
	public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
		// TODO Auto-generated method stub
		super.onItemClick(adapterView, view, i, l);
		
		Plan plan = (Plan)adapterView.getItemAtPosition(i);
		Intent intent = new Intent(this, ActivityDataSearchForm.class);
		intent.putExtra("plan", plan);
		startActivity(intent);
	}

}